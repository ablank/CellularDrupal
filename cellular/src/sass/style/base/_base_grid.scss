/**
  * @file
  * Cellular Grid
*/

.container {
  float: none;
  max-width: $container_width;
  margin: auto;
}

//////
// Grid Cells
/////
// Set common attributes.
.cell,
#{$cells} {
  z-index: 1;
  position: relative;
  float: left;
  display: block;
  @if($cell_margin) {
    margin: $cell_margin + unquote('%');
  }
  @if($cell_padding) {
    padding: $cell_padding + unquote('%');
  }
  @include transition();
  
  &.center {
    margin: $cell_margin + unquote('%') auto;
  }
}
// .cell is functionally a row
.cell {
  width: 100%;
  @include clear();
}
// Size individual cells & offsets.
@each $name, $size in $grid {
  .cell-#{$name} {
    @if($flexbox) {
      width: auto;
      margin: auto;
      flex-basis: $size + unquote('%');
      max-width: $size + unquote('%');
    }
    @else {
      width: $size - $cell_space + unquote('%');
    }
  }
  .offset-#{$name} {
    margin-left: $size + calc(($cell_space /2)) + unquote('%');
  }
}

@if($flexbox) {
  .flex {
    display: flex;
    flex: 1 1 auto;
    flex-flow: row wrap;
    justify-content: space-around;
    align-items: stretch;
    align-content: flex-start;
    &.col {
      flex-direction: column;
    }
    //&>#{$cells} {margin: auto;}
  }
}


@media screen and (min-width: 0) and (max-width: $res_small) {
  // Set all cells to single-column
  #{$cells} {
    width: 100% - $cell_space;
    @if($flexbox) {
      flex-basis: 100% - $cell_space;
      max-width: 100% - $cell_space;
    }
  }
  #{$offsets} {
    margin-left: $cell_margin + unquote('%');
  }
}

/////
//Element positioning classes
/////
.hidden {
  position: absolute;
  left: -9999px;
}

.clearfix {
  @include clear();
}

.left,
.right,
.center {
  display: block;
}

.left {
  float: left;
}

.right {
  float: right;
}

.center {
  float: none;
  margin: $cell_margin + unquote('%') auto;
  @include clear();
}